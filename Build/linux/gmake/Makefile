# GNU Make workspace makefile autogenerated by Premake

.NOTPARALLEL:

ifndef config
  config=debug_x32
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_x32)
  catch_example_config = debug_x32
  cppspec_config = debug_x32
  cucumber_cpp_config = debug_x32
  cucumber_cpp_cppspec_driver_config = debug_x32
  cucumber_cpp_main_config = debug_x32
  cucumber_example_config = debug_x32
  gmock_config = debug_x32
  gmock_example_config = debug_x32
  gmock_main_config = debug_x32
  hayai_benchmark_config = debug_x32
  test_bindings_config = debug_x32
endif
ifeq ($(config),debug_x64)
  catch_example_config = debug_x64
  cppspec_config = debug_x64
  cucumber_cpp_config = debug_x64
  cucumber_cpp_cppspec_driver_config = debug_x64
  cucumber_cpp_main_config = debug_x64
  cucumber_example_config = debug_x64
  gmock_config = debug_x64
  gmock_example_config = debug_x64
  gmock_main_config = debug_x64
  hayai_benchmark_config = debug_x64
  test_bindings_config = debug_x64
endif
ifeq ($(config),debug_arm)
  catch_example_config = debug_arm
  cppspec_config = debug_arm
  cucumber_cpp_config = debug_arm
  cucumber_cpp_cppspec_driver_config = debug_arm
  cucumber_cpp_main_config = debug_arm
  cucumber_example_config = debug_arm
  gmock_config = debug_arm
  gmock_example_config = debug_arm
  gmock_main_config = debug_arm
  hayai_benchmark_config = debug_arm
  test_bindings_config = debug_arm
endif
ifeq ($(config),release_x32)
  catch_example_config = release_x32
  cppspec_config = release_x32
  cucumber_cpp_config = release_x32
  cucumber_cpp_cppspec_driver_config = release_x32
  cucumber_cpp_main_config = release_x32
  cucumber_example_config = release_x32
  gmock_config = release_x32
  gmock_example_config = release_x32
  gmock_main_config = release_x32
  hayai_benchmark_config = release_x32
  test_bindings_config = release_x32
endif
ifeq ($(config),release_x64)
  catch_example_config = release_x64
  cppspec_config = release_x64
  cucumber_cpp_config = release_x64
  cucumber_cpp_cppspec_driver_config = release_x64
  cucumber_cpp_main_config = release_x64
  cucumber_example_config = release_x64
  gmock_config = release_x64
  gmock_example_config = release_x64
  gmock_main_config = release_x64
  hayai_benchmark_config = release_x64
  test_bindings_config = release_x64
endif
ifeq ($(config),release_arm)
  catch_example_config = release_arm
  cppspec_config = release_arm
  cucumber_cpp_config = release_arm
  cucumber_cpp_cppspec_driver_config = release_arm
  cucumber_cpp_main_config = release_arm
  cucumber_example_config = release_arm
  gmock_config = release_arm
  gmock_example_config = release_arm
  gmock_main_config = release_arm
  hayai_benchmark_config = release_arm
  test_bindings_config = release_arm
endif

PROJECTS := catch_example cppspec cucumber-cpp cucumber-cpp-cppspec-driver cucumber-cpp-main cucumber_example gmock gmock_example gmock_main hayai_benchmark test_bindings

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

catch_example:
ifneq (,$(catch_example_config))
	@echo "==== Building catch_example ($(catch_example_config)) ===="
	@${MAKE} --no-print-directory -C . -f catch_example.make config=$(catch_example_config)
endif

cppspec:
ifneq (,$(cppspec_config))
	@echo "==== Building cppspec ($(cppspec_config)) ===="
	@${MAKE} --no-print-directory -C . -f cppspec.make config=$(cppspec_config)
endif

cucumber-cpp:
ifneq (,$(cucumber_cpp_config))
	@echo "==== Building cucumber-cpp ($(cucumber_cpp_config)) ===="
	@${MAKE} --no-print-directory -C . -f cucumber-cpp.make config=$(cucumber_cpp_config)
endif

cucumber-cpp-cppspec-driver:
ifneq (,$(cucumber_cpp_cppspec_driver_config))
	@echo "==== Building cucumber-cpp-cppspec-driver ($(cucumber_cpp_cppspec_driver_config)) ===="
	@${MAKE} --no-print-directory -C . -f cucumber-cpp-cppspec-driver.make config=$(cucumber_cpp_cppspec_driver_config)
endif

cucumber-cpp-main:
ifneq (,$(cucumber_cpp_main_config))
	@echo "==== Building cucumber-cpp-main ($(cucumber_cpp_main_config)) ===="
	@${MAKE} --no-print-directory -C . -f cucumber-cpp-main.make config=$(cucumber_cpp_main_config)
endif

cucumber_example: cucumber-cpp-main cucumber-cpp cppspec cucumber-cpp-cppspec-driver
ifneq (,$(cucumber_example_config))
	@echo "==== Building cucumber_example ($(cucumber_example_config)) ===="
	@${MAKE} --no-print-directory -C . -f cucumber_example.make config=$(cucumber_example_config)
endif

gmock:
ifneq (,$(gmock_config))
	@echo "==== Building gmock ($(gmock_config)) ===="
	@${MAKE} --no-print-directory -C . -f gmock.make config=$(gmock_config)
endif

gmock_example: gmock gmock_main
ifneq (,$(gmock_example_config))
	@echo "==== Building gmock_example ($(gmock_example_config)) ===="
	@${MAKE} --no-print-directory -C . -f gmock_example.make config=$(gmock_example_config)
endif

gmock_main:
ifneq (,$(gmock_main_config))
	@echo "==== Building gmock_main ($(gmock_main_config)) ===="
	@${MAKE} --no-print-directory -C . -f gmock_main.make config=$(gmock_main_config)
endif

hayai_benchmark:
ifneq (,$(hayai_benchmark_config))
	@echo "==== Building hayai_benchmark ($(hayai_benchmark_config)) ===="
	@${MAKE} --no-print-directory -C . -f hayai_benchmark.make config=$(hayai_benchmark_config)
endif

test_bindings:
ifneq (,$(test_bindings_config))
	@echo "==== Building test_bindings ($(test_bindings_config)) ===="
	@${MAKE} --no-print-directory -C . -f test_bindings.make config=$(test_bindings_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f catch_example.make clean
	@${MAKE} --no-print-directory -C . -f cppspec.make clean
	@${MAKE} --no-print-directory -C . -f cucumber-cpp.make clean
	@${MAKE} --no-print-directory -C . -f cucumber-cpp-cppspec-driver.make clean
	@${MAKE} --no-print-directory -C . -f cucumber-cpp-main.make clean
	@${MAKE} --no-print-directory -C . -f cucumber_example.make clean
	@${MAKE} --no-print-directory -C . -f gmock.make clean
	@${MAKE} --no-print-directory -C . -f gmock_example.make clean
	@${MAKE} --no-print-directory -C . -f gmock_main.make clean
	@${MAKE} --no-print-directory -C . -f hayai_benchmark.make clean
	@${MAKE} --no-print-directory -C . -f test_bindings.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_x32"
	@echo "  debug_x64"
	@echo "  debug_arm"
	@echo "  release_x32"
	@echo "  release_x64"
	@echo "  release_arm"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   catch_example"
	@echo "   cppspec"
	@echo "   cucumber-cpp"
	@echo "   cucumber-cpp-cppspec-driver"
	@echo "   cucumber-cpp-main"
	@echo "   cucumber_example"
	@echo "   gmock"
	@echo "   gmock_example"
	@echo "   gmock_main"
	@echo "   hayai_benchmark"
	@echo "   test_bindings"
	@echo ""
	@echo "For more information, see http://industriousone.com/premake/quick-start"