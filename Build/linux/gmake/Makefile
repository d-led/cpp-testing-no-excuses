# GNU Make solution makefile autogenerated by Premake
# Type "make help" for usage help

ifndef config
  config=debug32
endif
export config

PROJECTS := catch_example gmock gmock_main gmock_example

.PHONY: all clean help $(PROJECTS)

all: $(PROJECTS)

catch_example: 
	@echo "==== Building catch_example ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f catch_example.make

gmock: 
	@echo "==== Building gmock ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f gmock.make

gmock_main: 
	@echo "==== Building gmock_main ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f gmock_main.make

gmock_example: gmock gmock_main
	@echo "==== Building gmock_example ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f gmock_example.make

clean:
	@${MAKE} --no-print-directory -C . -f catch_example.make clean
	@${MAKE} --no-print-directory -C . -f gmock.make clean
	@${MAKE} --no-print-directory -C . -f gmock_main.make clean
	@${MAKE} --no-print-directory -C . -f gmock_example.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "   debug32"
	@echo "   release32"
	@echo "   debug64"
	@echo "   release64"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   catch_example"
	@echo "   gmock"
	@echo "   gmock_main"
	@echo "   gmock_example"
	@echo ""
	@echo "For more information, see http://industriousone.com/premake/quick-start"
